"use strict";(self.webpackChunktextWandler=self.webpackChunktextWandler||[]).push([[4962],{44962:(e,n,o)=>{o.r(n),o.d(n,{conf:()=>t,language:()=>r});var t={comments:{lineComment:"'"},brackets:[["(",")"],["[","]"],["If","EndIf"],["While","EndWhile"],["For","EndFor"],["Sub","EndSub"]],autoClosingPairs:[{open:'"',close:'"',notIn:["string","comment"]},{open:"(",close:")",notIn:["string","comment"]},{open:"[",close:"]",notIn:["string","comment"]}]},r={defaultToken:"",tokenPostfix:".sb",ignoreCase:!0,brackets:[{token:"delimiter.array",open:"[",close:"]"},{token:"delimiter.parenthesis",open:"(",close:")"},{token:"keyword.tag-if",open:"If",close:"EndIf"},{token:"keyword.tag-while",open:"While",close:"EndWhile"},{token:"keyword.tag-for",open:"For",close:"EndFor"},{token:"keyword.tag-sub",open:"Sub",close:"EndSub"}],keywords:["Else","ElseIf","EndFor","EndIf","EndSub","EndWhile","For","Goto","If","Step","Sub","Then","To","While"],tagwords:["If","Sub","While","For"],operators:[">","<","<>","<=",">=","And","Or","+","-","*","/","="],identifier:/[a-zA-Z_][\w]*/,symbols:/[=><:+\-*\/%\.,]+/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,tokenizer:{root:[{include:"@whitespace"},[/(@identifier)(?=[.])/,"type"],[/@identifier/,{cases:{"@keywords":{token:"keyword.$0"},"@operators":"operator","@default":"variable.name"}}],[/([.])(@identifier)/,{cases:{$2:["delimiter","type.member"],"@default":""}}],[/\d*\.\d+/,"number.float"],[/\d+/,"number"],[/[()\[\]]/,"@brackets"],[/@symbols/,{cases:{"@operators":"operator","@default":"delimiter"}}],[/"([^"\\]|\\.)*$/,"string.invalid"],[/"/,"string","@string"]],whitespace:[[/[ \t\r\n]+/,""],[/(\').*$/,"comment"]],string:[[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"C?/,"string","@pop"]]}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDk2Mi5idW5kbGUuanMiLCJtYXBwaW5ncyI6InFKQVNBLElBQUlBLEVBQU8sQ0FDVEMsU0FBVSxDQUNSQyxZQUFhLEtBRWZDLFNBQVUsQ0FDUixDQUFDLElBQUssS0FDTixDQUFDLElBQUssS0FDTixDQUFDLEtBQU0sU0FDUCxDQUFDLFFBQVMsWUFDVixDQUFDLE1BQU8sVUFDUixDQUFDLE1BQU8sV0FFVkMsaUJBQWtCLENBQ2hCLENBQUVDLEtBQU0sSUFBS0MsTUFBTyxJQUFLQyxNQUFPLENBQUMsU0FBVSxZQUMzQyxDQUFFRixLQUFNLElBQUtDLE1BQU8sSUFBS0MsTUFBTyxDQUFDLFNBQVUsWUFDM0MsQ0FBRUYsS0FBTSxJQUFLQyxNQUFPLElBQUtDLE1BQU8sQ0FBQyxTQUFVLGNBRzNDQyxFQUFXLENBQ2JDLGFBQWMsR0FDZEMsYUFBYyxNQUNkQyxZQUFZLEVBQ1pSLFNBQVUsQ0FDUixDQUFFUyxNQUFPLGtCQUFtQlAsS0FBTSxJQUFLQyxNQUFPLEtBQzlDLENBQUVNLE1BQU8sd0JBQXlCUCxLQUFNLElBQUtDLE1BQU8sS0FFcEQsQ0FBRU0sTUFBTyxpQkFBa0JQLEtBQU0sS0FBTUMsTUFBTyxTQUM5QyxDQUFFTSxNQUFPLG9CQUFxQlAsS0FBTSxRQUFTQyxNQUFPLFlBQ3BELENBQUVNLE1BQU8sa0JBQW1CUCxLQUFNLE1BQU9DLE1BQU8sVUFDaEQsQ0FBRU0sTUFBTyxrQkFBbUJQLEtBQU0sTUFBT0MsTUFBTyxXQUVsRE8sU0FBVSxDQUNSLE9BQ0EsU0FDQSxTQUNBLFFBQ0EsU0FDQSxXQUNBLE1BQ0EsT0FDQSxLQUNBLE9BQ0EsTUFDQSxPQUNBLEtBQ0EsU0FFRkMsU0FBVSxDQUFDLEtBQU0sTUFBTyxRQUFTLE9BQ2pDQyxVQUFXLENBQUMsSUFBSyxJQUFLLEtBQU0sS0FBTSxLQUFNLE1BQU8sS0FBTSxJQUFLLElBQUssSUFBSyxJQUFLLEtBRXpFQyxXQUFZLGlCQUNaQyxRQUFTLG9CQUNUQyxRQUFTLHdFQUVUQyxVQUFXLENBQ1RDLEtBQU0sQ0FFSixDQUFFQyxRQUFTLGVBRVgsQ0FBQyx1QkFBd0IsUUFFekIsQ0FDRSxjQUNBLENBQ0VDLE1BQU8sQ0FDTCxZQUFhLENBQUVWLE1BQU8sY0FDdEIsYUFBYyxXQUNkLFdBQVksbUJBS2xCLENBQ0UscUJBQ0EsQ0FDRVUsTUFBTyxDQUNMQyxHQUFJLENBQUMsWUFBYSxlQUNsQixXQUFZLE1BS2xCLENBQUMsV0FBWSxnQkFDYixDQUFDLE1BQU8sVUFFUixDQUFDLFdBQVksYUFDYixDQUNFLFdBQ0EsQ0FDRUQsTUFBTyxDQUNMLGFBQWMsV0FDZCxXQUFZLGVBS2xCLENBQUMsa0JBQW1CLGtCQUVwQixDQUFDLElBQUssU0FBVSxZQUVsQkUsV0FBWSxDQUNWLENBQUMsYUFBYyxJQUNmLENBQUMsVUFBVyxZQUVkQyxPQUFRLENBQ04sQ0FBQyxVQUFXLFVBQ1osQ0FBQyxXQUFZLGlCQUNiLENBQUMsTUFBTyx5QkFDUixDQUFDLE1BQU8sU0FBVSxVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGV4dFdhbmRsZXIvLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3NiL3NiLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIFZlcnNpb246IDAuNTIuMig0MDQ1NDViZGVkMWRmNmZmYTQxZWEwYWY0ZThkZGIyMTkwMThjNmMxKVxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L21vbmFjby1lZGl0b3IvYmxvYi9tYWluL0xJQ0VOU0UudHh0XG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuXG4vLyBzcmMvYmFzaWMtbGFuZ3VhZ2VzL3NiL3NiLnRzXG52YXIgY29uZiA9IHtcbiAgY29tbWVudHM6IHtcbiAgICBsaW5lQ29tbWVudDogXCInXCJcbiAgfSxcbiAgYnJhY2tldHM6IFtcbiAgICBbXCIoXCIsIFwiKVwiXSxcbiAgICBbXCJbXCIsIFwiXVwiXSxcbiAgICBbXCJJZlwiLCBcIkVuZElmXCJdLFxuICAgIFtcIldoaWxlXCIsIFwiRW5kV2hpbGVcIl0sXG4gICAgW1wiRm9yXCIsIFwiRW5kRm9yXCJdLFxuICAgIFtcIlN1YlwiLCBcIkVuZFN1YlwiXVxuICBdLFxuICBhdXRvQ2xvc2luZ1BhaXJzOiBbXG4gICAgeyBvcGVuOiAnXCInLCBjbG9zZTogJ1wiJywgbm90SW46IFtcInN0cmluZ1wiLCBcImNvbW1lbnRcIl0gfSxcbiAgICB7IG9wZW46IFwiKFwiLCBjbG9zZTogXCIpXCIsIG5vdEluOiBbXCJzdHJpbmdcIiwgXCJjb21tZW50XCJdIH0sXG4gICAgeyBvcGVuOiBcIltcIiwgY2xvc2U6IFwiXVwiLCBub3RJbjogW1wic3RyaW5nXCIsIFwiY29tbWVudFwiXSB9XG4gIF1cbn07XG52YXIgbGFuZ3VhZ2UgPSB7XG4gIGRlZmF1bHRUb2tlbjogXCJcIixcbiAgdG9rZW5Qb3N0Zml4OiBcIi5zYlwiLFxuICBpZ25vcmVDYXNlOiB0cnVlLFxuICBicmFja2V0czogW1xuICAgIHsgdG9rZW46IFwiZGVsaW1pdGVyLmFycmF5XCIsIG9wZW46IFwiW1wiLCBjbG9zZTogXCJdXCIgfSxcbiAgICB7IHRva2VuOiBcImRlbGltaXRlci5wYXJlbnRoZXNpc1wiLCBvcGVuOiBcIihcIiwgY2xvc2U6IFwiKVwiIH0sXG4gICAgLy8gU3BlY2lhbCBicmFja2V0IHN0YXRlbWVudCBwYWlyc1xuICAgIHsgdG9rZW46IFwia2V5d29yZC50YWctaWZcIiwgb3BlbjogXCJJZlwiLCBjbG9zZTogXCJFbmRJZlwiIH0sXG4gICAgeyB0b2tlbjogXCJrZXl3b3JkLnRhZy13aGlsZVwiLCBvcGVuOiBcIldoaWxlXCIsIGNsb3NlOiBcIkVuZFdoaWxlXCIgfSxcbiAgICB7IHRva2VuOiBcImtleXdvcmQudGFnLWZvclwiLCBvcGVuOiBcIkZvclwiLCBjbG9zZTogXCJFbmRGb3JcIiB9LFxuICAgIHsgdG9rZW46IFwia2V5d29yZC50YWctc3ViXCIsIG9wZW46IFwiU3ViXCIsIGNsb3NlOiBcIkVuZFN1YlwiIH1cbiAgXSxcbiAga2V5d29yZHM6IFtcbiAgICBcIkVsc2VcIixcbiAgICBcIkVsc2VJZlwiLFxuICAgIFwiRW5kRm9yXCIsXG4gICAgXCJFbmRJZlwiLFxuICAgIFwiRW5kU3ViXCIsXG4gICAgXCJFbmRXaGlsZVwiLFxuICAgIFwiRm9yXCIsXG4gICAgXCJHb3RvXCIsXG4gICAgXCJJZlwiLFxuICAgIFwiU3RlcFwiLFxuICAgIFwiU3ViXCIsXG4gICAgXCJUaGVuXCIsXG4gICAgXCJUb1wiLFxuICAgIFwiV2hpbGVcIlxuICBdLFxuICB0YWd3b3JkczogW1wiSWZcIiwgXCJTdWJcIiwgXCJXaGlsZVwiLCBcIkZvclwiXSxcbiAgb3BlcmF0b3JzOiBbXCI+XCIsIFwiPFwiLCBcIjw+XCIsIFwiPD1cIiwgXCI+PVwiLCBcIkFuZFwiLCBcIk9yXCIsIFwiK1wiLCBcIi1cIiwgXCIqXCIsIFwiL1wiLCBcIj1cIl0sXG4gIC8vIHdlIGluY2x1ZGUgdGhlc2UgY29tbW9uIHJlZ3VsYXIgZXhwcmVzc2lvbnNcbiAgaWRlbnRpZmllcjogL1thLXpBLVpfXVtcXHddKi8sXG4gIHN5bWJvbHM6IC9bPT48OitcXC0qXFwvJVxcLixdKy8sXG4gIGVzY2FwZXM6IC9cXFxcKD86W2FiZm5ydHZcXFxcXCInXXx4WzAtOUEtRmEtZl17MSw0fXx1WzAtOUEtRmEtZl17NH18VVswLTlBLUZhLWZdezh9KS8sXG4gIC8vIFRoZSBtYWluIHRva2VuaXplciBmb3Igb3VyIGxhbmd1YWdlc1xuICB0b2tlbml6ZXI6IHtcbiAgICByb290OiBbXG4gICAgICAvLyB3aGl0ZXNwYWNlXG4gICAgICB7IGluY2x1ZGU6IFwiQHdoaXRlc3BhY2VcIiB9LFxuICAgICAgLy8gY2xhc3Nlc1xuICAgICAgWy8oQGlkZW50aWZpZXIpKD89Wy5dKS8sIFwidHlwZVwiXSxcbiAgICAgIC8vIGlkZW50aWZpZXJzLCB0YWd3b3JkcywgYW5kIGtleXdvcmRzXG4gICAgICBbXG4gICAgICAgIC9AaWRlbnRpZmllci8sXG4gICAgICAgIHtcbiAgICAgICAgICBjYXNlczoge1xuICAgICAgICAgICAgXCJAa2V5d29yZHNcIjogeyB0b2tlbjogXCJrZXl3b3JkLiQwXCIgfSxcbiAgICAgICAgICAgIFwiQG9wZXJhdG9yc1wiOiBcIm9wZXJhdG9yXCIsXG4gICAgICAgICAgICBcIkBkZWZhdWx0XCI6IFwidmFyaWFibGUubmFtZVwiXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgLy8gbWV0aG9kcywgcHJvcGVydGllcywgYW5kIGV2ZW50c1xuICAgICAgW1xuICAgICAgICAvKFsuXSkoQGlkZW50aWZpZXIpLyxcbiAgICAgICAge1xuICAgICAgICAgIGNhc2VzOiB7XG4gICAgICAgICAgICAkMjogW1wiZGVsaW1pdGVyXCIsIFwidHlwZS5tZW1iZXJcIl0sXG4gICAgICAgICAgICBcIkBkZWZhdWx0XCI6IFwiXCJcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICAvLyBudW1iZXJzXG4gICAgICBbL1xcZCpcXC5cXGQrLywgXCJudW1iZXIuZmxvYXRcIl0sXG4gICAgICBbL1xcZCsvLCBcIm51bWJlclwiXSxcbiAgICAgIC8vIGRlbGltaXRlcnMgYW5kIG9wZXJhdG9yc1xuICAgICAgWy9bKClcXFtcXF1dLywgXCJAYnJhY2tldHNcIl0sXG4gICAgICBbXG4gICAgICAgIC9Ac3ltYm9scy8sXG4gICAgICAgIHtcbiAgICAgICAgICBjYXNlczoge1xuICAgICAgICAgICAgXCJAb3BlcmF0b3JzXCI6IFwib3BlcmF0b3JcIixcbiAgICAgICAgICAgIFwiQGRlZmF1bHRcIjogXCJkZWxpbWl0ZXJcIlxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIC8vIHN0cmluZ3NcbiAgICAgIFsvXCIoW15cIlxcXFxdfFxcXFwuKSokLywgXCJzdHJpbmcuaW52YWxpZFwiXSxcbiAgICAgIC8vIG5vbi10ZW1pbmF0ZWQgc3RyaW5nXG4gICAgICBbL1wiLywgXCJzdHJpbmdcIiwgXCJAc3RyaW5nXCJdXG4gICAgXSxcbiAgICB3aGl0ZXNwYWNlOiBbXG4gICAgICBbL1sgXFx0XFxyXFxuXSsvLCBcIlwiXSxcbiAgICAgIFsvKFxcJykuKiQvLCBcImNvbW1lbnRcIl1cbiAgICBdLFxuICAgIHN0cmluZzogW1xuICAgICAgWy9bXlxcXFxcIl0rLywgXCJzdHJpbmdcIl0sXG4gICAgICBbL0Blc2NhcGVzLywgXCJzdHJpbmcuZXNjYXBlXCJdLFxuICAgICAgWy9cXFxcLi8sIFwic3RyaW5nLmVzY2FwZS5pbnZhbGlkXCJdLFxuICAgICAgWy9cIkM/LywgXCJzdHJpbmdcIiwgXCJAcG9wXCJdXG4gICAgXVxuICB9XG59O1xuZXhwb3J0IHtcbiAgY29uZixcbiAgbGFuZ3VhZ2Vcbn07XG4iXSwibmFtZXMiOlsiY29uZiIsImNvbW1lbnRzIiwibGluZUNvbW1lbnQiLCJicmFja2V0cyIsImF1dG9DbG9zaW5nUGFpcnMiLCJvcGVuIiwiY2xvc2UiLCJub3RJbiIsImxhbmd1YWdlIiwiZGVmYXVsdFRva2VuIiwidG9rZW5Qb3N0Zml4IiwiaWdub3JlQ2FzZSIsInRva2VuIiwia2V5d29yZHMiLCJ0YWd3b3JkcyIsIm9wZXJhdG9ycyIsImlkZW50aWZpZXIiLCJzeW1ib2xzIiwiZXNjYXBlcyIsInRva2VuaXplciIsInJvb3QiLCJpbmNsdWRlIiwiY2FzZXMiLCIkMiIsIndoaXRlc3BhY2UiLCJzdHJpbmciXSwic291cmNlUm9vdCI6IiJ9